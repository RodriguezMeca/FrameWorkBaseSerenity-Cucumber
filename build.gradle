buildscript {
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:4.2.1")
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
}

defaultTasks 'clean', 'test', 'aggregate'
apply plugin: 'net.serenity-bdd.serenity-gradle-plugin'

group = 'com.ibm.as400.automation'
version = '1.0-SNAPSHOT'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

ext {
    serenityCoreVersion = '4.2.8'
    junitVersion = '4.13.1'
    lombokVersion = '1.18.22'
    log4j2Version = '2.20.0'
    jt400Version = '20.0.0'
    abstractaXTN5250Version = '2.2'
    blazemeterDm3270Version = '0.15-lib'
    jlineVersion = '3.21.0'
    wireshamVersion = '0.7'
    fakerVersion = '1.0.2'
    webdriverManagerVersion = '5.9.2'
}

dependencies {
    implementation "junit:junit:${junitVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
    implementation "org.apache.logging.log4j:log4j-api:${log4j2Version}"

    implementation "net.sf.jt400:jt400:${jt400Version}"

    implementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-junit5:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}"

    implementation "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}"

    implementation "us.abstracta:xtn5250:${abstractaXTN5250Version}"
    implementation "com.blazemeter:dm3270-lib:${blazemeterDm3270Version}"
    implementation "org.jline:jline:${jlineVersion}"
    testImplementation "us.abstracta:wiresham:${wireshamVersion}"

    implementation "com.github.javafaker:javafaker:${fakerVersion}"
    implementation "org.fusesource.jansi:jansi:2.4.1"
}

test {
    useJUnit()
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)
